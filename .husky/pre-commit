# #!/usr/bin/env sh
# . "$(dirname -- "$0")/_/husky.sh"

# Define colors using tput for 256 color support
if [ -t 1 ]; then
    # Foreground colors
    NOTIFY=$(tput setaf 202)    # Orange text
    SUCCESS=$(tput setaf 2)     # Green text
    ERROR=$(tput setaf 1)       # Red text
    INFO=$(tput setaf 6)        # Cyan text
    
    # Background colors
    WARNING=$(tput setab 202)   # Orange background
    
    # Reset
    RESET=$(tput sgr0)
else
    NOTIFY=""
    SUCCESS=""
    ERROR=""
    INFO=""
    WARNING=""
    RESET=""
fi

# Main pre-commit script
echo "${INFO}üîç Running pre-commit checks...${RESET}"

# Run lint-staged for formatting and linting staged files
npx lint-staged || {
    echo "${ERROR}‚ùå Lint-staged failed. Please fix the issues and try committing again.${RESET}"
    exit 1
}

# Only run build if changes are detected in source files
STAGED_SOURCE_FILES=$(git diff --cached --name-only | grep -E '\.(ts|tsx|js|jsx)$')
if [ -n "$STAGED_SOURCE_FILES" ]; then
    echo "${NOTIFY}üèóÔ∏è  Detected source file changes:${RESET}"
    echo "$STAGED_SOURCE_FILES"
    echo "${WARNING} You can change build checks to :web or :hook ${RESET}"
    echo "${NOTIFY}Running build checks...${RESET}"
    npm run build || {
        echo "${ERROR}‚ùå Build failed. Please fix the build issues and try committing again.${RESET}"
        exit 1
    }
else
    echo "${INFO}‚ÑπÔ∏è  No source files changed. Skipping build check.${RESET}"
fi

echo "${SUCCESS}‚úÖ All checks passed successfully!${RESET}"